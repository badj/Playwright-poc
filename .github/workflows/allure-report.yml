name: Playwright Tests with Allure Report

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '30 19 * * *'  # 7:30 am NZT (UTC+12)

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Step 3: Install Java (required for Allure CLI)
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 4: Install dependencies
      - name: Install npm dependencies
        run: npm ci

      # Step 5: Install Playwright browsers
      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      # Step 6: Run Playwright tests - TODO: Testing it without docker run
      - name: Run Playwright tests
        run: npx playwright test
        env:
          CI: true

      # Step 6: Run Playwright tests - TODO: Testing it with docker run (it works) - Choose between this step or simplified step above!
#      - name: Run Playwright tests in Docker
#        run: |
#          docker run --rm \
#            -v ${{ github.workspace }}:/work \
#            -w /work \
#            mcr.microsoft.com/playwright:v1.53.2-jammy \
#            npx playwright test

#      TODO: Remove when workflow issues are all resolved!
#      - name: Debug GITHUB_WORKSPACE
#        run: echo "GITHUB_WORKSPACE is $GITHUB_WORKSPACE"

      # Step 7: Install Allure CLI - failing
      - name: Install Allure CLI
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.29.0/allure-2.29.0.tgz
          mkdir -p $GITHUB_WORKSPACE/allure
          tar -zxvf allure-2.29.0.tgz -C $GITHUB_WORKSPACE/allure
          echo "$GITHUB_WORKSPACE/allure/allure-2.29.0/bin" >> $GITHUB_PATH
          echo $PATH
#          allure --version TODO: resolve this or remove it!

#      TODO: Remove when workflow issues are all resolved!
      - name: Debug allure-results directory
        run: ls -la allure-results || echo "allure-results does not exist"

      # Step 8: Add environment information
      - name: Add environment information
        run: |
          mkdir -p allure-results
          echo "OS=Ubuntu" > allure-results/environment.properties
          echo "NodeVersion=$(node --version)" >> allure-results/environment.properties
          echo "PlaywrightVersion=$(npx playwright --version | awk '{print $2}')" >> allure-results/environment.properties

      # Step 9: Generate Allure report
      - name: Generate Allure report
        # run: allure generate allure-results -o allure-report --clean TODO: Using command below (clean option removed) to test if it resolves the empty report 
        run: allure generate allure-results -o allure-report

      # Step 10: Upload Allure report as artifact
      - name: Upload Allure report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report/
        if: always()
